<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd   
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd   
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
     	<property name="applicationContextSchedulerContextKey" value="applicationContext" />
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="overwriteExistingJobs" value="true"/>
        <property name="autoStartup" value="true" />
        <property name="triggers">
            <list>
                <ref bean="pingCronTrigger" />
                <!-- <ref bean="shadowCronTrigger" /> -->
            </list>
        </property>
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">SgprScheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
                <prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.oracle.OracleDelegate</prop>
                <prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
                <prop key="org.quartz.jobStore.isClustered">true</prop>
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">2</prop>
                <prop key="org.quartz.threadPool.threadPriority">5</prop>
                <prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
            </props>
      </property>
      <!-- 
      <property name="schedulerContextAsMap">
      	<map>
      		<entry key="shadow" value-ref="shadow"></entry>
      	</map>
      </property>
       -->
    </bean>

    <!-- Job comprobación recepción último mensaje Keep Alive  -->
	<bean name="pingJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.malsolo.mercurious.scheduled.PingJob" />
	</bean>
	
	<bean id="pingCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="pingJob" />
		<!-- se configura en el framework -->
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	
	<!-- Job para la gestión (actualmente sólo borrado) de usuarios de consulta (super-usuarios) expirados -->
	<bean name="shadowJob" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="com.malsolo.mercurious.scheduled.ShadowJob" />
	</bean>
	
	<bean id="shadowCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="shadowJob" />
		<!-- se configura en el framework -->
		<property name="cronExpression" value="0 0/3 * * * ?" />
	</bean>

    <bean id="shadow" class="com.malsolo.mercurious.scheduled.ShadowImpl" />
    <bean id="ping" class="com.malsolo.mercurious.scheduled.PingImpl" />
    
</beans>